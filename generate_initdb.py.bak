import random
from faker import Faker

# Инициализация Faker для генерации случайных данных
fake = Faker()

# Функция для генерации SQL-файла
def generate_initdb_sql(filename):
    with open(filename, "w") as f:
        # Создание таблиц
        f.write("""
CREATE TABLE IF NOT EXISTS products (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    category VARCHAR(50) NOT NULL,
    price_per_kg NUMERIC(10, 2) NOT NULL
);

CREATE TABLE IF NOT EXISTS customers (
    id SERIAL PRIMARY KEY,
    full_name VARCHAR(100) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    has_discount_card BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS sales (
    id SERIAL PRIMARY KEY,
    product_id INT REFERENCES products(id),
    customer_id INT REFERENCES customers(id),
    date DATE NOT NULL,
    weight NUMERIC(10, 2) NOT NULL,
    total_cost NUMERIC(10, 2) NOT NULL
);
""")

        # Генерация данных для таблицы products
        products = [
            ("Яблоки", "Фрукты", 100.0),
            ("Картофель", "Овощи", 50.0),
            ("Морковь", "Овощи", 70.0),
            ("Бананы", "Фрукты", 120.0),
            ("Помидоры", "Овощи", 90.0),
        ]
        for product in products:
            f.write(f"INSERT INTO products (name, category, price_per_kg) VALUES ('{product[0]}', '{product[1]}', {product[2]});\n")

        # Генерация данных для таблицы customers
        for _ in range(10):
            full_name = fake.name()
            phone = fake.phone_number()
            has_discount_card = random.choice([True, False])
            f.write(f"INSERT INTO customers (full_name, phone, has_discount_card) VALUES ('{full_name}', '{phone}', {has_discount_card});\n")

        # Генерация данных для таблицы sales
        for _ in range(20):
            product_id = random.randint(1, len(products))
            customer_id = random.randint(1, 10)
            date = fake.date_between(start_date='-1y', end_date='today').strftime('%Y-%m-%d')
            weight = round(random.uniform(1.0, 10.0), 2)
            total_cost = round(weight * products[product_id - 1][2], 2)
            f.write(f"INSERT INTO sales (product_id, customer_id, date, weight, total_cost) VALUES ({product_id}, {customer_id}, '{date}', {weight}, {total_cost});\n")

# Запуск генерации
if __name__ == "__main__":
    generate_initdb_sql("initdb.sql")
    print("Файл initdb.sql успешно создан!")